<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blacktea&#39;s Life</title>
  <subtitle>A programmer who love music and football</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blackteachinese.com/"/>
  <updated>2017-04-12T15:43:46.000Z</updated>
  <id>http://blackteachinese.com/</id>
  
  <author>
    <name>Blacktea</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac上使用intelliJ开发WEbServer(Servlet)、mysql的新手教程</title>
    <link href="http://blackteachinese.com/2017/04/09/server-intelliJ-Servlet-and-mysql-mac-guide/"/>
    <id>http://blackteachinese.com/2017/04/09/server-intelliJ-Servlet-and-mysql-mac-guide/</id>
    <published>2017-04-09T09:03:57.000Z</published>
    <updated>2017-04-12T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><h2 id="什么是Servlet"><a href="#什么是Servlet" class="headerlink" title="什么是Servlet"></a>什么是Servlet</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Servlet是Java提供的用于开发Web服务器应用程序的一个组件，运行在服务器端，由Servlet容器所管理，用于生成动态的内容。Servlet是平台独立的Java类，编写一个Servlet，实际上就是按照Servlet规范编写一个Java类。</div></pre></td></tr></table></figure>
<h3 id="什么是JSP"><a href="#什么是JSP" class="headerlink" title="什么是JSP"></a>什么是JSP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">JSP是Servlet的一种特殊形式，每个JSP页面就是一个Servlet实例——JSP页面由系统编译成Servlet，Servlet再负责响应用户请求。JSP其实也是Servlet的一种简化，使用JSP时，其实还是使用Servlet，因为Web应用中的每个JSP页面都会由Servlet容器生成对应的Servlet。对于Tomcat而言，JSP页面生成的Servlet放在work路径对应的Web应用下。</div></pre></td></tr></table></figure>
<h2 id="IntelliJ开发WebServer"><a href="#IntelliJ开发WebServer" class="headerlink" title="IntelliJ开发WebServer"></a>IntelliJ开发WebServer</h2><h3 id="Demo源码github地址"><a href="#Demo源码github地址" class="headerlink" title="Demo源码github地址"></a>Demo源码github地址</h3><p><a href="https://github.com/blackteachinese/servletDemo" target="_blank" rel="external">https://github.com/blackteachinese/servletDemo</a></p>
<h3 id="搭建Webserver工程环境"><a href="#搭建Webserver工程环境" class="headerlink" title="搭建Webserver工程环境"></a>搭建Webserver工程环境</h3><ul>
<li>创建一个Maven Demo工程</li>
</ul>
<p><img src="https://ww4.sinaimg.cn/large/006tNbRwgy1fegnm20xl9j31k614g7ht.jpg" alt=""></p>
<ul>
<li>项目名称右键，选择”Add Framework Support”</li>
</ul>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegol1jdxwj31kw0oggwi.jpg" alt=""></p>
<ul>
<li><p>添加Web Application<br><img src="https://ww2.sinaimg.cn/large/006tNbRwgy1fegns27f26j315w0wodla.jpg" alt=""></p>
</li>
<li><p>添加完后可以看到WebServer的目录<br><img src="https://ww4.sinaimg.cn/large/006tNbRwgy1fegohsev6aj31kw0oen5p.jpg" alt=""></p>
</li>
<li>配置Artifact打包部署设置<br><img src="https://ww4.sinaimg.cn/large/006tNbRwgy1fekapz6ibvj31kw0zkat2.jpg" alt=""></li>
<li>配置Tomcat服务器<br><img src="https://ww3.sinaimg.cn/large/006tNbRwgy1fego68iog8j31kw0yf138.jpg" alt=""><h3 id="开发一个Get请求接口"><a href="#开发一个Get请求接口" class="headerlink" title="开发一个Get请求接口"></a>开发一个Get请求接口</h3></li>
<li>创建一个formGetApi.html,做为表单承载页<br><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegpiusk8pj31kw0zkx0h.jpg" alt=""></li>
<li>在Index.jsp配置跳转到formGetApi.html页面<br><img src="https://ww2.sinaimg.cn/large/006tNbRwgy1fegplchmg6j31kw0zkx00.jpg" alt=""></li>
<li>创建一个继承于HttpServlet的Java类GetApiTest<ul>
<li>你会发现HttpServlet找不到。不用急，选中“HttpServlet”按“option”+”enter”,点击添加Maven依赖,导入HttpServlet的依赖即可。<br><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegpzl7dutj31kw0zk4ig.jpg" alt=""><br><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegq0dby9jj31kw0zk4qp.jpg" alt=""></li>
</ul>
</li>
<li>重载HttpServlet的“service”方法。通过“getParameter”和“getParameterValues”获取表单的字段，并将获取到的结果输出回浏览器。<br><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegq84bcd0j31kw0zktwj.jpg" alt=""></li>
<li><p>web.xml里配置api的映射</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</div><div class="line">&lt;web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"</div><div class="line">         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</div><div class="line">         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</div><div class="line">         version="3.1"&gt;</div><div class="line">    &lt;servlet&gt;</div><div class="line">        &lt;servlet-name&gt;GetApiServlet&lt;/servlet-name&gt;</div><div class="line">        &lt;servlet-class&gt;GetApiTest&lt;/servlet-class&gt;</div><div class="line">    &lt;/servlet&gt;</div><div class="line">    &lt;servlet-mapping&gt;</div><div class="line">        &lt;servlet-name&gt;GetApiServlet&lt;/servlet-name&gt;</div><div class="line">        &lt;url-pattern&gt;/getApi&lt;/url-pattern&gt;</div><div class="line">    &lt;/servlet-mapping&gt;</div><div class="line">&lt;/web-app&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>启动Tomcat<br><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegqhun83wj31kw0zk1h9.jpg" alt=""></p>
<h3 id="开发一个Post请求接口"><a href="#开发一个Post请求接口" class="headerlink" title="开发一个Post请求接口"></a>开发一个Post请求接口</h3></li>
<li>创建一个formPostApi.html。唯一的不同是对”method”的设置。<br><img src="https://ww2.sinaimg.cn/large/006tNbRwgy1fegreb6o2aj31kw0zktus.jpg" alt=""></li>
<li>创建一个继承于HttpServlet的Java类PostApiTest。<ul>
<li>post请求需要先对request、response对象设置CharacterEncoding<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span>  <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        <span class="comment">// right to read chinese</span></div><div class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</div><div class="line">        <span class="comment">// right to output chinese</span></div><div class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</div><div class="line">        PrintWriter out = resp.getWriter();</div><div class="line">        <span class="comment">// get name value</span></div><div class="line">        String name = req.getParameter(<span class="string">"name"</span>);</div><div class="line">        out.println(<span class="string">"&lt;h1&gt;Hello,"</span>+name+<span class="string">"&lt;/h1&gt;"</span>);</div><div class="line">        <span class="comment">// get info value</span></div><div class="line">        String[] infos = req.getParameterValues(<span class="string">"info"</span>);</div><div class="line">        <span class="keyword">if</span> (infos != <span class="keyword">null</span>) &#123;</div><div class="line">            out.print(<span class="string">"&lt;h1&gt;info :&lt;/h1&gt;"</span>);</div><div class="line">            <span class="keyword">for</span> (String contact :infos) &#123;</div><div class="line">                out.print(<span class="string">"&lt;h1&gt;"</span>+contact+<span class="string">"&lt;/h1&gt;"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<img src="https://ww4.sinaimg.cn/large/006tNbRwgy1fegs5i2yuej31kw0zktw1.jpg" alt=""></li>
</ul>
</li>
</ul>
<h3 id="使用mysql储存提交的表单数据"><a href="#使用mysql储存提交的表单数据" class="headerlink" title="使用mysql储存提交的表单数据"></a>使用mysql储存提交的表单数据</h3><ul>
<li>创建一个formMysqlApi.html页面</li>
<li>web.xml映射配置</li>
<li>创建一个继承于HttpServlet的Java类MysqlApiTest。<br><img src="https://ww2.sinaimg.cn/large/006tNbRwgy1fegxj3mr6gj31kw0zktxp.jpg" alt=""><h3 id="mql操作"><a href="#mql操作" class="headerlink" title="mql操作"></a>mql操作</h3><h4 id="IntelliJ添加一个Datasource"><a href="#IntelliJ添加一个Datasource" class="headerlink" title="IntelliJ添加一个Datasource"></a>IntelliJ添加一个Datasource</h4><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegwssbwsij31kw0zkb1s.jpg" alt=""><br><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegx5ivyf0j31kw0zkh6b.jpg" alt=""><h4 id="mysql命令行创建一个DataBase"><a href="#mysql命令行创建一个DataBase" class="headerlink" title="mysql命令行创建一个DataBase"></a>mysql命令行创建一个DataBase</h4><img src="https://ww3.sinaimg.cn/large/006tNbRwgy1fegx6wfmamj30ew0203yp.jpg" alt=""><h4 id="IntelliJ创建一个createDB-sql文件，创建userInfo表"><a href="#IntelliJ创建一个createDB-sql文件，创建userInfo表" class="headerlink" title="IntelliJ创建一个createDB.sql文件，创建userInfo表"></a>IntelliJ创建一个createDB.sql文件，创建userInfo表</h4><img src="https://ww2.sinaimg.cn/large/006tNbRwgy1fegx9n7gb7j31kw0zkqlc.jpg" alt=""><h4 id="mysql命令行设置userInfo表character为UTF8"><a href="#mysql命令行设置userInfo表character为UTF8" class="headerlink" title="mysql命令行设置userInfo表character为UTF8"></a>mysql命令行设置userInfo表character为UTF8</h4><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fegxbs3pw7j30ss084abd.jpg" alt=""><h4 id="IntelliJ创建一个insertDB-sql文件，插入一条数据"><a href="#IntelliJ创建一个insertDB-sql文件，插入一条数据" class="headerlink" title="IntelliJ创建一个insertDB.sql文件，插入一条数据"></a>IntelliJ创建一个insertDB.sql文件，插入一条数据</h4><img src="https://ww3.sinaimg.cn/large/006tNbRwgy1fegxd9h002j31kw0zk1a3.jpg" alt=""><h4 id="动态加载mysql驱动"><a href="#动态加载mysql驱动" class="headerlink" title="动态加载mysql驱动"></a>动态加载mysql驱动</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</div></pre></td></tr></table></figure>
<h4 id="JDBC连接MySQL"><a href="#JDBC连接MySQL" class="headerlink" title="JDBC连接MySQL"></a>JDBC连接MySQL</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">conn = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/webserverDemo?user=root&amp;password=19880622"</span>);</div></pre></td></tr></table></figure>
<h2 id="Class-forName-“com-mysql-jdbc-Driver”-失败"><a href="#Class-forName-“com-mysql-jdbc-Driver”-失败" class="headerlink" title="Class.forName(“com.mysql.jdbc.Driver”) 失败"></a>Class.forName(“com.mysql.jdbc.Driver”) 失败</h2><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><h3 id="IntelliJ环境搭建"><a href="#IntelliJ环境搭建" class="headerlink" title="IntelliJ环境搭建"></a>IntelliJ环境搭建</h3><h3 id="mysql环境搭建"><a href="#mysql环境搭建" class="headerlink" title="mysql环境搭建"></a>mysql环境搭建</h3><h3 id="常用mysql命令"><a href="#常用mysql命令" class="headerlink" title="常用mysql命令"></a>常用mysql命令</h3></li>
<li>连接mysql:<ul>
<li>格式： mysql -h主机地址 -u用户名 －p用户密码</li>
<li>example:mysql -uroot -p</li>
</ul>
</li>
<li>退出MYSQL命令<ul>
<li>格式：exit （回车）</li>
</ul>
</li>
<li>创建数据库<ul>
<li>命令：create databas &lt;数据库名&gt;;</li>
</ul>
</li>
<li>显示数据库<ul>
<li>命令：show databases;</li>
</ul>
</li>
<li>连接数据库<ul>
<li>命令： use &lt;数据库名&gt;</li>
</ul>
</li>
<li>创建数据库表<ul>
<li>命令：create table &lt;表名&gt; ( &lt;字段名1&gt; &lt;类型1&gt; [,..&lt;字段名n&gt; &lt;类型n&gt;]);</li>
</ul>
</li>
<li>删除表<ul>
<li>命令：drop table &lt;表名&gt;</li>
</ul>
</li>
<li>插入表数据 <ul>
<li>命令：insert into &lt;表名&gt; [( &lt;字段名1&gt;[,..&lt;字段名n &gt; ])] values ( 值1 )[, ( 值n )]</li>
</ul>
</li>
<li>查看表中所有数据<ul>
<li>命令： select &lt;字段1，字段2，…&gt; from &lt; 表名 &gt; where &lt; 表达式 &gt;</li>
<li>example:select * from MyClass;</li>
</ul>
</li>
</ul>
<h3 id="MySQL的JDBC-URL格式"><a href="#MySQL的JDBC-URL格式" class="headerlink" title="MySQL的JDBC URL格式"></a>MySQL的JDBC URL格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jdbc:mysql//[hostname][:port]/[dbname][?param1=value1][&amp;param2=value2]….</div></pre></td></tr></table></figure>
<p>Example：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jdbc:mysql://localhost:3306/sample_db?user=root&amp;password=your_password</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础概念&quot;&gt;&lt;a href=&quot;#基础概念&quot; class=&quot;headerlink&quot; title=&quot;基础概念&quot;&gt;&lt;/a&gt;基础概念&lt;/h1&gt;&lt;h2 id=&quot;什么是Servlet&quot;&gt;&lt;a href=&quot;#什么是Servlet&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
      <category term="server" scheme="http://blackteachinese.com/categories/server/"/>
    
    
      <category term="intelliJ" scheme="http://blackteachinese.com/tags/intelliJ/"/>
    
      <category term="Servlet" scheme="http://blackteachinese.com/tags/Servlet/"/>
    
      <category term="mysql" scheme="http://blackteachinese.com/tags/mysql/"/>
    
      <category term="Mac" scheme="http://blackteachinese.com/tags/Mac/"/>
    
      <category term="WEbServer" scheme="http://blackteachinese.com/tags/WEbServer/"/>
    
  </entry>
  
  <entry>
    <title>巴菲特的投资思维如何用于日常生活</title>
    <link href="http://blackteachinese.com/2017/04/04/financial-use-invest-sense/"/>
    <id>http://blackteachinese.com/2017/04/04/financial-use-invest-sense/</id>
    <published>2017-04-04T07:36:16.000Z</published>
    <updated>2017-04-04T09:49:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学会权衡风险与收益"><a href="#学会权衡风险与收益" class="headerlink" title="学会权衡风险与收益"></a>学会权衡风险与收益</h1><p>首先，我们做事情要有明确的目的，不同的目的要采用不同的方法。<br>大部分人在生活中很容易受别人影响。<br>看到朋友给他的孩子报了钢琴、英语、绘画等兴趣班，就想象自己的孩子会落后于别人，赶紧自己也给孩子报了相应的培训班。</p>
<p>危机意识敏锐是人类进化的优良习惯。在原始森林里，当你看到身边的人突然加速逃跑的时候，如果你非常理智思考一下，观察一下身边的情况，你很可能就野兽吃了。于是活下来的都拥有容易受他人影响的基因。但现代生活比原始森林复杂多了，光依靠过去的本能的反应已经远远不够了。我们应该明确好自己的目标，而不是别人给孩子报英语，我们就不加思索的也报英语。</p>
<p>那我们应该怎么做？每个孩子有着不一样的基因，各方面的能力不一样，兴趣爱好也不一样。譬如，你发现自己孩子对音乐特别敏感，听到音乐会跟着哼、身体跟着节奏舞动。那说明你的孩子对音乐、舞蹈比较敏锐，可以尝试往这个方向引导。于是这就成为你权衡给孩子哪些教育其中一个目标。即便是要给孩子报兴趣班，也要依据你积累下来的这些目标和方向。不盲目跟风。</p>
<h1 id="切莫好高骛远。"><a href="#切莫好高骛远。" class="headerlink" title="切莫好高骛远。"></a>切莫好高骛远。</h1><p>我们在制定目标时不能好高骛远。如果你好高骛远，那么你定的目标通常会没有可执行性。</p>
<p>比如你定下这样的目标，“我今年的理财投资回报率要达到30%”。有些人可能会觉得也并不是很难，牛市的时候几个涨停就够了。天了噜，巴菲特每年的投资回报率就12%左右。他养着一个全球最贵的投资团队，每天分析各行业趋势、各国政策的影响、企业的动态，最后收益也就平均12%。</p>
<p>我并非说没有任何人的投资的回报能高于巴菲特，只是非常少，可能低于5%。而且即便你某一年投资回报高于巴菲特并不代表你平均每年投资回报率能高于巴菲特，也就是说你的投资策略、投资能力并不优于巴菲特，只是刚好今年的投资运气特别好。这其实又说到另外一个主题，是关于自我认知能力，大部分人的自我认知能力都很差，这个且不说。</p>
<p>在生活中好高骛远会带来什么实际性的错误呢？就像上面的例子，如果你定的理财回报率是30%，那你就会关注到很多风险极高的投资产品。比如一些区块链的垃圾币包装的理财产品、期货产品。你也更容易被别人忽悠去买这些风险极高、甚至完全是骗局的传销型理财产品。如果你定的目标是30岁前实现财富自由，你可能就会忽视基础的积累，只去做那些看起来有可能的事情。比如买彩票、盲目创业、高风险投资。你买股票时可能会加5倍杠杆，不翻倍的投资你不会考虑。</p>
<h1 id="权衡回报和风险"><a href="#权衡回报和风险" class="headerlink" title="权衡回报和风险"></a>权衡回报和风险</h1><p>我们需要考虑的是回报和风险的比例，而不仅仅是回报本身。<br>是的，我们常常听别人说这个回报率是10%非常高，这个回报率是12%相当赞。但却很少有人说，这个理财产品往年的实际投资回报是多少。多大的百分比是亏损、多大的百分百是0%～5%之间。大家都对风险的分析做得不够，能大概知道A产品风险较低、B产品风险高一点就已经很不错了。更别提最后通过概率权的思想计算出实际的投资回报率（而不是发行方包装的回报率）。</p>
<p>在生活中我们同样要学会权衡回报和收益。比如：周六有个李开复的讲座要不要去听。</p>
<ul>
<li>先算一下要花的时间。 <ul>
<li>路上时间+讲座时间，共6个小时</li>
</ul>
</li>
<li>初步预计一下收益。<ul>
<li>认识几个行业朋友？听到李开复对人工智能的干货？感受一下气氛，激发一下自己的热情？</li>
</ul>
</li>
<li>替代方案／机会成本<ul>
<li>陪老婆孩子</li>
<li>看半本书</li>
<li>打场球锻炼一下</li>
<li>花两个小时看视频直播，省下4个小时干别的。</li>
</ul>
</li>
</ul>
<h1 id="切换有成本"><a href="#切换有成本" class="headerlink" title="切换有成本"></a>切换有成本</h1><p>最后，任何事情都有一个准入的成本，或者说切换的成本。大到换工作，小到换手机，换电脑，都是如此。到新单位前三个月乃至半年，要重新学习和适应，其实做不了太重要的事情，这就是准入成本。换一台电脑，很多旧的文件要导出来，要装新软件，这都是准入成本。考虑到准入成本，你就不应该切换工作太频繁，在一个公司待不到2年通常都是一件成本较高的事情。</p>
<p>PS：这些思想听起来是很简单道理，大家或多或少都听过这样的说法，但平时却很难做不到。这是由于我们长久以来形成的错误的思维习惯，你不下意识去纠正，即便听过N遍也很难真正吸收。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;学会权衡风险与收益&quot;&gt;&lt;a href=&quot;#学会权衡风险与收益&quot; class=&quot;headerlink&quot; title=&quot;学会权衡风险与收益&quot;&gt;&lt;/a&gt;学会权衡风险与收益&lt;/h1&gt;&lt;p&gt;首先，我们做事情要有明确的目的，不同的目的要采用不同的方法。&lt;br&gt;大部分人在生活中
    
    </summary>
    
      <category term="思维" scheme="http://blackteachinese.com/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="投资" scheme="http://blackteachinese.com/tags/%E6%8A%95%E8%B5%84/"/>
    
      <category term="思维" scheme="http://blackteachinese.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="理财" scheme="http://blackteachinese.com/tags/%E7%90%86%E8%B4%A2/"/>
    
      <category term="生活" scheme="http://blackteachinese.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>比尔盖茨的成功不靠天赋和努力</title>
    <link href="http://blackteachinese.com/2017/03/29/success_outliers/"/>
    <id>http://blackteachinese.com/2017/03/29/success_outliers/</id>
    <published>2017-03-29T13:37:07.000Z</published>
    <updated>2017-04-04T10:36:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-优势积累比天赋更重要"><a href="#一-优势积累比天赋更重要" class="headerlink" title="一 .优势积累比天赋更重要"></a>一 .优势积累比天赋更重要</h1><h2 id="机遇比天赋更重要"><a href="#机遇比天赋更重要" class="headerlink" title="机遇比天赋更重要"></a>机遇比天赋更重要</h2><p>加拿大著名球队老虎队的队员里25个球员，有17个球员的出生日期在1～3月。为什么有么明显的倾向性？加拿大冰球选拔机制是按年龄分组，5岁一组、6岁一组。同样是1990年出生，1月份出生的小孩和12月份出生的小孩分在一组。对于小孩来说差了10几个月，身体发育就差很多，年初出生的球员就占据很大的优势。所以年初出生的小孩一开始表现就会更好，表现更好就会被筛选到特训组，得到更好的训练。得到更好的训练，表现就更好，如此不断积累优势，最后年初出生的小孩称为顶级球员的机率就大大提升。</p>
<h2 id="知道一万小时理论也没用"><a href="#知道一万小时理论也没用" class="headerlink" title="知道一万小时理论也没用"></a>知道一万小时理论也没用</h2><p>不是每个人都有机会在合适的时机进行一万小时的训练。比如加拿大的冰球运动员，如果你小的时候进不了第一梯队，就没能进行优质的训练，很难达到一万小时。而且年龄大了再完成一万小时的训练也没有用了，因为运动员的身体条件高峰期是受年龄限制的。</p>
<h2 id="社会环境变革比努力重要得多"><a href="#社会环境变革比努力重要得多" class="headerlink" title="社会环境变革比努力重要得多"></a>社会环境变革比努力重要得多</h2><p>70后毕业参加工作买一套房子，相当于80后工作10年。最近毕业的清华大学学生，买不起北京房子不要太多。</p>
<h1 id="二-文化背景对成功影响很大"><a href="#二-文化背景对成功影响很大" class="headerlink" title="二.文化背景对成功影响很大"></a>二.文化背景对成功影响很大</h1><p>20世纪90年代韩国大航航空公司飞机失事率是同期美国联合航空的17倍，但究其原因竟然不是飞机设备、也不是管理问题。他们做了大量调研，听取飞机黑匣子录音，最终发现韩国文化是最根本的原因。因为韩国是一个等级分明的国家。在飞行过程中，机长做了一些错误的决策，副机长以及其他成员不敢说，没有了其他成员的有力监督，飞机失事率就变高了很多。</p>
<h1 id="我们该怎么做"><a href="#我们该怎么做" class="headerlink" title="我们该怎么做"></a>我们该怎么做</h1><h2 id="挤入第一梯队"><a href="#挤入第一梯队" class="headerlink" title="挤入第一梯队"></a>挤入第一梯队</h2><p>学习和工作时要想办法进入“第一梯队”，这样才能获得高质量的训练，加速积累达到一万小时的训练，从了增加优势积累的机会。</p>
<h2 id="如何获得社会变革红利"><a href="#如何获得社会变革红利" class="headerlink" title="如何获得社会变革红利"></a>如何获得社会变革红利</h2><p>花时间研究未来趋势，训练自己的预见能力，并且在未来趋势到来之前，开始一万小时的积累。比尔盖茨在大家还没用电脑前，就有了计算机编程的10万小时积累。<br>我们需要一点运气，找到风口并且在风口前已经做好了准备。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一-优势积累比天赋更重要&quot;&gt;&lt;a href=&quot;#一-优势积累比天赋更重要&quot; class=&quot;headerlink&quot; title=&quot;一 .优势积累比天赋更重要&quot;&gt;&lt;/a&gt;一 .优势积累比天赋更重要&lt;/h1&gt;&lt;h2 id=&quot;机遇比天赋更重要&quot;&gt;&lt;a href=&quot;#机遇比
    
    </summary>
    
      <category term="思维" scheme="http://blackteachinese.com/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="成功" scheme="http://blackteachinese.com/tags/%E6%88%90%E5%8A%9F/"/>
    
      <category term="努力" scheme="http://blackteachinese.com/tags/%E5%8A%AA%E5%8A%9B/"/>
    
      <category term="天赋" scheme="http://blackteachinese.com/tags/%E5%A4%A9%E8%B5%8B/"/>
    
      <category term="比尔盖茨" scheme="http://blackteachinese.com/tags/%E6%AF%94%E5%B0%94%E7%9B%96%E8%8C%A8/"/>
    
      <category term="优势积累" scheme="http://blackteachinese.com/tags/%E4%BC%98%E5%8A%BF%E7%A7%AF%E7%B4%AF/"/>
    
      <category term="逆袭" scheme="http://blackteachinese.com/tags/%E9%80%86%E8%A2%AD/"/>
    
      <category term="一万小时理论" scheme="http://blackteachinese.com/tags/%E4%B8%80%E4%B8%87%E5%B0%8F%E6%97%B6%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>内存泄漏监控</title>
    <link href="http://blackteachinese.com/2017/03/14/ios_memoryLeak_tool/"/>
    <id>http://blackteachinese.com/2017/03/14/ios_memoryLeak_tool/</id>
    <published>2017-03-14T02:18:21.000Z</published>
    <updated>2017-04-09T09:16:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要做app内存泄漏监控？"><a href="#为什么要做app内存泄漏监控？" class="headerlink" title="为什么要做app内存泄漏监控？"></a>为什么要做app内存泄漏监控？</h2><p>内存泄漏将导致app内存占用变大，成为iphone要kill App的时候优先考虑的对象.<br><img src="https://ww3.sinaimg.cn/large/006tNc79gy1fduvum23wsj31870j3jwx.jpg" alt=""></p>
<h2 id="监控内存泄漏的时机"><a href="#监控内存泄漏的时机" class="headerlink" title="监控内存泄漏的时机"></a>监控内存泄漏的时机</h2><ol>
<li>UIViewController调用”dismissViewControllerAnimated:”的时候</li>
<li>UInavigationController调用”popToRootViewControllerAnimated:”等pop方法</li>
<li>UITabbbarViewController、UIPageViewController、UISplitViewController+MemoryLeak需要释放时，对应的内嵌视图控制器也需要释放。<br><img src="https://ww3.sinaimg.cn/large/006tNc79gy1fduvtrj272j31080hgn00.jpg" alt=""></li>
</ol>
<h2 id="监控小技巧"><a href="#监控小技巧" class="headerlink" title="监控小技巧"></a>监控小技巧</h2><p>创建一个block,block持有需要释放的视图的weak指针，当监测时机到时，执行这个block，如果weak指针不为nil,则该试图已经内存泄漏了。<br><img src="https://ww4.sinaimg.cn/large/006tNc79gy1fduvux09v8j313i0ngjtw.jpg" alt=""></p>
<h2 id="监控对象"><a href="#监控对象" class="headerlink" title="监控对象"></a>监控对象</h2><ol>
<li>所有需要释放的视图控制器</li>
<li>视图控制器的View,及其每一层嵌套的Subview</li>
</ol>
<h2 id="视图树的记录"><a href="#视图树的记录" class="headerlink" title="视图树的记录"></a>视图树的记录</h2><p>监测到内存泄漏后，为了方便开发定位到具体泄漏的视图，我们可以泄漏的视图树记录下来。</p>
<h2 id="泄漏后如何及时提醒"><a href="#泄漏后如何及时提醒" class="headerlink" title="泄漏后如何及时提醒"></a>泄漏后如何及时提醒</h2><p>泄漏后怎么提醒开发者比较合适呢。</p>
<ol>
<li>发现泄漏马上把泄漏的视图树log打印出来</li>
<li>悬浮一个提醒款，显示当前泄漏的数量</li>
<li>命中断言（会阻断开发，容易被喷）</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要做app内存泄漏监控？&quot;&gt;&lt;a href=&quot;#为什么要做app内存泄漏监控？&quot; class=&quot;headerlink&quot; title=&quot;为什么要做app内存泄漏监控？&quot;&gt;&lt;/a&gt;为什么要做app内存泄漏监控？&lt;/h2&gt;&lt;p&gt;内存泄漏将导致app内存占用变大，成
    
    </summary>
    
      <category term="iOS" scheme="http://blackteachinese.com/categories/iOS/"/>
    
    
      <category term="内存泄漏" scheme="http://blackteachinese.com/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/"/>
    
      <category term="监控" scheme="http://blackteachinese.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="报警" scheme="http://blackteachinese.com/tags/%E6%8A%A5%E8%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>iOS侧滑出现的卡死Bug</title>
    <link href="http://blackteachinese.com/2016/12/30/ios-ui-left-slip-bug/"/>
    <id>http://blackteachinese.com/2016/12/30/ios-ui-left-slip-bug/</id>
    <published>2016-12-30T10:30:07.000Z</published>
    <updated>2017-04-09T08:59:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>我们都知道iOS7以后，系统UINavigationController自带侧滑返回上一级。它是通过navigationController中的interactivePopGestureRecognizer属性来控制。</p>
<p>某一天测试妹妹跑过来跟我说，我测出一个bug，进去某一个页面后回到RootViewController，左滑会导致视图堆栈变乱。我试了一下，果真如此。我想起以前曾经遇到一个bug，如果是自定义UINavigationController并且设置了自定义的leftBarButtonItem，那在UINavigationController的rootViewController上滑动返回时，会出现界面卡死的情况。</p>
<p>赶紧查了一下我们的自定义XXNavigationController,缺失设置了leftBarButtonItem。但是仔细查看了代码，我们其实是禁止了rootViewController左滑返回的事件。</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">BOOL</span>)gestureRecognizerShouldBegin:(<span class="built_in">UIGestureRecognizer</span> *)gestureRecognizer &#123;</div><div class="line">    <span class="keyword">if</span> (gestureRecognizer == <span class="keyword">self</span>.interactivePopGestureRecognizer) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.viewControllers.count &lt;= <span class="number">1</span> ||</div><div class="line">            <span class="keyword">self</span>.visibleViewController == [<span class="keyword">self</span>.viewControllers firstObject]) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">NO</span>;</div><div class="line">        &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>天了噜！这应该没有问题的，什么情况。经过一番仔细查看，发现只有进入某个页面，左滑才会出这个问题。到底这个做了什么？终于被我发现一行要命的代码。</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.navigationController.interactivePopGestureRecognizer.delegate = <span class="literal">nil</span>;</div></pre></td></tr></table></figure>
<p>interactivePopGestureRecognizer的代理被设置成nil了。。。。<br>怎么处理好呢？</p>
<p>首先，创建一个类XXXDelegate专门处理侧滑手势的delegate事件。并实现上面“gestureRecognizerShouldBegin:gestureRecognizer”方法的处理。</p>
<p>接着，在XXTabbarController把每个NavgationController对应创建一个XXXDelegate。每次回到TabbarController任意一个子页面“viewDidAppear”的时候，把对应ChildViewController的NavgationController的interactivePopGestureRecognizer.delegate设置成对应的XXXDelegate;</p>
<p>结论，这样不论哪个页面把interactivePopGestureRecognizer的代理设置成nil，都能保证回到rootViewController，interactivePopGestureRecognizer.delegate都能设置成功。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们都知道iOS7以后，系统UINavigationController自带侧滑返回上一级。它是通过navigationController中的interactivePopGestureRecognizer属性来控制。&lt;/p&gt;
&lt;p&gt;某一天测试妹妹跑过来跟我说，我测出一个b
    
    </summary>
    
      <category term="iOS" scheme="http://blackteachinese.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://blackteachinese.com/tags/iOS/"/>
    
      <category term="左滑bug" scheme="http://blackteachinese.com/tags/%E5%B7%A6%E6%BB%91bug/"/>
    
      <category term="interactivePopGestureRecognizer" scheme="http://blackteachinese.com/tags/interactivePopGestureRecognizer/"/>
    
      <category term="左滑卡死" scheme="http://blackteachinese.com/tags/%E5%B7%A6%E6%BB%91%E5%8D%A1%E6%AD%BB/"/>
    
  </entry>
  
  <entry>
    <title>NSURL编码问题</title>
    <link href="http://blackteachinese.com/2014/08/16/ios-url-encode/"/>
    <id>http://blackteachinese.com/2014/08/16/ios-url-encode/</id>
    <published>2014-08-16T08:33:37.000Z</published>
    <updated>2017-04-09T09:17:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>我们在使用url生成NSURL时需要注意非法字符的问题。<br>举个例子：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSString</span> *value = <span class="string">@"http://blackteachinese.com/2017/life/红茶!@#$%^&amp;*()"</span>;</div><div class="line"><span class="built_in">NSString</span> *urlString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"blacktea://yumi?key=%@"</span>, value];</div><div class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlString];</div></pre></td></tr></table></figure></p>
<p>上面这个例子，当你使用url时你会发现url为nil。什么原因呢？是因为由于url支持26个英文字母、数字和少数几个特殊字符，因此，对于url中包含非标准url的字符时，就需要对其进行编码。于是你就需要使用CFURLCreateStringByAddingPercentEscapes进行URLEcodeing</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSString</span> *value = <span class="string">@"http://blackteachinese.com/2017/life/红茶!@#$%^&amp;*()"</span>;</div><div class="line"><span class="built_in">NSString</span> *urlString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"blacktea://yumi?key=%@"</span>, value];</div><div class="line"> urlString =  (__bridge_transfer  <span class="built_in">NSString</span> *)<span class="built_in">CFURLCreateStringByAddingPercentEscapes</span>(kCFAllocatorDefault,</div><div class="line">                                                                                  (__bridge <span class="built_in">CFStringRef</span>)urlString,</div><div class="line">                                                                                  <span class="literal">NULL</span>,</div><div class="line">                                                                                  (__bridge <span class="built_in">CFStringRef</span>)<span class="string">@":/?&amp;=;+!@#$()',*"</span>,</div><div class="line">                                                                                  <span class="built_in">CFStringConvertNSStringEncodingToEncoding</span>(<span class="built_in">NSUTF8StringEncoding</span>));</div><div class="line"></div><div class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlString];</div></pre></td></tr></table></figure>
<p>这样的话url就不空</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们在使用url生成NSURL时需要注意非法字符的问题。&lt;br&gt;举个例子：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div 
    
    </summary>
    
      <category term="iOS" scheme="http://blackteachinese.com/categories/iOS/"/>
    
    
      <category term="NSURL编码" scheme="http://blackteachinese.com/tags/NSURL%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
</feed>
